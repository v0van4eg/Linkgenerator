# Сервер dev
server {
    listen 80;
    server_name tecnobook;
    client_max_body_size 5000M;

    # Проксирование запросов к Flask приложению (включая /admin и /admin/archive)
    location /admin {
        auth_basic "Административный раздел";
        auth_basic_user_file /etc/nginx/htpasswd;
        proxy_pass http://app:5000; # Изменено: указывает на app:5000, а не на app:5000/admin
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Статические файлы Flask приложения
    # Важно: если /static/ запрашивается через /admin, он также попадет в proxy_pass выше.
    # Если Flask не обрабатывает /static/ напрямую, но Nginx должен отдавать их из volumes,
    # используйте alias. Но в вашем текущем config он проксируется. Оставим как есть, если так задумано.
    # Если вы хотите, чтобы Nginx отдавал статику напрямую из volume, используйте:
    # location /static/ {
    #     alias /app/static/;
    #     expires 30d;
    # }
    # Но если он проксируется, то:
    location /static/ {
        proxy_pass http://app:5000/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Обслуживание загруженных изображений
    location /images/ {
        alias /app/uploads/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    location = / {
        root /app/templates;
        try_files /hello.html =404;
    }
}

# Сервер для админки на gradient.ru
server {
    listen 80;
    server_name stashlink.gradient.ru;
    client_max_body_size 5000M;

    # Проксирование запросов к Flask приложению (включая /admin и /admin/archive)
    location /admin {
        auth_basic "Административный раздел";
        auth_basic_user_file /etc/nginx/htpasswd;
        proxy_pass http://app:5000; # Изменено: указывает на app:5000
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Статические файлы Flask приложения (проксируется)
    location /static/ {
        proxy_pass http://app:5000/static/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Обслуживание корневого пути - отдача hello.html
    location = / {
        root /app/templates;
        try_files /hello.html =404;
    }
}

# Сервер для изображений на vldm.ru
server {
    listen 80;
    server_name stashlink.vldm.ru;
    client_max_body_size 5000M;

    # Обслуживание загруженных изображений
    location /images/ {
        alias /app/uploads/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    # Статические файлы приложения (если нужны)
    location /static/ {
        alias /app/static/;
        expires 30d;
    }

    # Обслуживание корневого пути - отдача hello.html
    location = / {
        root /app/templates;
        try_files /hello.html =404;
    }

    # Все остальные запросы редиректим на основную страницу
    location / {
        return 301 /;
    }
}

# Сервер по умолчанию - для доступа по IP
server {
    listen 80 default_server;
    server_name _; # Ловит все остальные запросы, включая IP
    client_max_body_size 5000M;

    # Обслуживание корневого пути - отдача hello.html
    location = / {
        root /app/templates;
        try_files /hello.html =404;
    }

    # Все остальные запросы тоже возвращают hello.html
    location / {
        root /app/templates;
        try_files /hello.html =404;
    }
}
